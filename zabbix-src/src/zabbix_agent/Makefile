# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/zabbix_agent/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/zabbix
pkglibdir = $(libdir)/zabbix
pkgincludedir = $(includedir)/zabbix
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
sbin_PROGRAMS = zabbix_agent$(EXEEXT) zabbix_agentd$(EXEEXT)
subdir = src/zabbix_agent
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_ibm_db2.m4 \
	$(top_srcdir)/m4/ax_lib_mysql.m4 \
	$(top_srcdir)/m4/ax_lib_oracle_oci.m4 \
	$(top_srcdir)/m4/ax_lib_postgresql.m4 \
	$(top_srcdir)/m4/ax_lib_sqlite3.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/jabber.m4 $(top_srcdir)/m4/ldap.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libiodbc.m4 \
	$(top_srcdir)/m4/libssh2.m4 $(top_srcdir)/m4/libunixodbc.m4 \
	$(top_srcdir)/m4/netsnmp.m4 $(top_srcdir)/m4/openipmi.m4 \
	$(top_srcdir)/m4/resolv.m4 $(top_srcdir)/m4/ucdsnmp.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(sbin_PROGRAMS)
am_zabbix_agent_OBJECTS = zabbix_agent.$(OBJEXT) stats.$(OBJEXT) \
	cpustat.$(OBJEXT) diskdevices.$(OBJEXT) interfaces.$(OBJEXT) \
	perfstat.$(OBJEXT) vmstats.$(OBJEXT) zbxconf.$(OBJEXT)
zabbix_agent_OBJECTS = $(am_zabbix_agent_OBJECTS)
zabbix_agent_DEPENDENCIES = $(agents_ldadd)
am_zabbix_agentd_OBJECTS = zabbix_agentd-active.$(OBJEXT) \
	zabbix_agentd-stats.$(OBJEXT) zabbix_agentd-cpustat.$(OBJEXT) \
	zabbix_agentd-diskdevices.$(OBJEXT) \
	zabbix_agentd-interfaces.$(OBJEXT) \
	zabbix_agentd-perfstat.$(OBJEXT) \
	zabbix_agentd-vmstats.$(OBJEXT) \
	zabbix_agentd-logfiles.$(OBJEXT) \
	zabbix_agentd-zabbix_agentd.$(OBJEXT) \
	zabbix_agentd-zbxconf.$(OBJEXT) \
	zabbix_agentd-listener.$(OBJEXT) \
	zabbix_agentd-eventlog.$(OBJEXT)
zabbix_agentd_OBJECTS = $(am_zabbix_agentd_OBJECTS)
zabbix_agentd_DEPENDENCIES = $(agents_ldadd)
zabbix_agentd_LINK = $(CCLD) $(zabbix_agentd_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(zabbix_agent_SOURCES) $(zabbix_agentd_SOURCES)
DIST_SOURCES = $(zabbix_agent_SOURCES) $(zabbix_agentd_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/uesp-setup/zabbix-src/missing --run aclocal-1.10
AMTAR = ${SHELL} /root/uesp-setup/zabbix-src/missing --run tar
ARCH = linux
AUTOCONF = ${SHELL} /root/uesp-setup/zabbix-src/missing --run autoconf
AUTOHEADER = ${SHELL} /root/uesp-setup/zabbix-src/missing --run autoheader
AUTOMAKE = ${SHELL} /root/uesp-setup/zabbix-src/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2  
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DB_CPPFLAGS = 
DB_LDFLAGS = 
DB_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
ICONV_CFLAGS = 
ICONV_LDFLAGS = 
IKSEMEL_CFLAGS = 
IKSEMEL_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IODBC_CFLAGS = 
IODBC_LDFLAGS = 
IODBC_LIBS = 
JABBER_CPPFLAGS = 
JABBER_LDFLAGS = 
JABBER_LIBS = 
LDAP_CPPFLAGS = 
LDAP_LDFLAGS = 
LDFLAGS = -rdynamic   
LIBCURL_CFLAGS = 
LIBCURL_LDFLAGS = 
LIBCURL_LIBS = 
LIBOBJS = 
LIBS = -lm  -lresolv 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /root/uesp-setup/zabbix-src/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = 
MYSQL_LDFLAGS = 
MYSQL_LIBS = 
MYSQL_VERSION = 
OBJEXT = o
ODBC_CFLAGS = 
ODBC_LDFLAGS = 
ODBC_LIBS = 
OPENIPMI_CFLAGS = 
OPENIPMI_LDFLAGS = 
OPENIPMI_LIBS = 
ORACLE_CPPFLAGS = 
ORACLE_LDFLAGS = 
ORACLE_LIBS = 
ORACLE_OCI_CFLAGS = 
ORACLE_OCI_LDFLAGS = 
ORACLE_OCI_LIBS = 
ORACLE_OCI_VERSION = 
PACKAGE = zabbix
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PG_CONFIG = 
PKG_CONFIG = 
POSTGRESQL_CPPFLAGS = 
POSTGRESQL_LDFLAGS = 
POSTGRESQL_VERSION = 
PROXY_LDFLAGS = 
PROXY_LIBS = 
RANLIB = ranlib
RESOLV_LIBS = -lresolv
SERVER_LDFLAGS = 
SERVER_LIBS = 
SET_MAKE = 
SHELL = /bin/sh
SNMP_CFLAGS = 
SNMP_CPPFLAGS = 
SNMP_LDFLAGS = 
SNMP_LIBS = 
SQLITE3_CPPFLAGS = 
SQLITE3_LDFLAGS = 
SQLITE3_VERSION = 
SSH2_CFLAGS = 
SSH2_LDFLAGS = 
SSH2_LIBS = 
STRIP = 
UNIXODBC_CFLAGS = 
UNIXODBC_LDFLAGS = 
UNIXODBC_LIBS = 
VERSION = 1.8.4
_libcurl_config = 
_libnetsnmp_config = 
_libodbc_config = 
abs_builddir = /root/uesp-setup/zabbix-src/src/zabbix_agent
abs_srcdir = /root/uesp-setup/zabbix-src/src/zabbix_agent
abs_top_builddir = /root/uesp-setup/zabbix-src
abs_top_srcdir = /root/uesp-setup/zabbix-src
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /root/uesp-setup/zabbix-src/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
agents_ldadd = \
	$(top_srcdir)/src/libs/zbxsysinfo/libzbxagentsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/$(ARCH)/libspecsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/common/libcommonsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/simple/libsimplesysinfo.a \
	$(top_srcdir)/src/libs/zbxlog/libzbxlog.a \
	$(top_srcdir)/src/libs/zbxalgo/libzbxalgo.a \
	$(top_srcdir)/src/libs/zbxsys/libzbxsys.a \
	$(top_srcdir)/src/libs/zbxnix/libzbxnix.a \
	$(top_srcdir)/src/libs/zbxcomms/libzbxcomms.a \
	$(top_srcdir)/src/libs/zbxconf/libzbxconf.a \
	$(top_srcdir)/src/libs/zbxcommon/libzbxcommon.a \
	$(top_srcdir)/src/libs/zbxcrypto/libzbxcrypto.a \
	$(top_srcdir)/src/libs/zbxjson/libzbxjson.a

zabbix_agent_SOURCES = \
	zabbix_agent.c \
	stats.c stats.h \
	cpustat.c cpustat.h \
	diskdevices.c diskdevices.h \
	interfaces.c interfaces.h \
	perfstat.c perfstat.h \
	vmstats.c vmstats.h \
	zbxconf.c zbxconf.h

zabbix_agent_LDADD = $(agents_ldadd)
zabbix_agentd_SOURCES = \
	active.c active.h \
	stats.c stats.h \
	cpustat.c cpustat.h \
	diskdevices.c diskdevices.h \
	interfaces.c interfaces.h \
	perfstat.c perfstat.h \
	vmstats.c vmstats.h \
	logfiles.c logfiles.h \
	zabbix_agentd.c \
	zbxconf.c zbxconf.h \
	listener.c listener.h \
	eventlog.c eventlog.h

zabbix_agentd_LDADD = $(agents_ldadd)
zabbix_agentd_CFLAGS = -DZABBIX_DAEMON
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/zabbix_agent/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/zabbix_agent/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
zabbix_agent$(EXEEXT): $(zabbix_agent_OBJECTS) $(zabbix_agent_DEPENDENCIES) 
	@rm -f zabbix_agent$(EXEEXT)
	$(LINK) $(zabbix_agent_OBJECTS) $(zabbix_agent_LDADD) $(LIBS)
zabbix_agentd$(EXEEXT): $(zabbix_agentd_OBJECTS) $(zabbix_agentd_DEPENDENCIES) 
	@rm -f zabbix_agentd$(EXEEXT)
	$(zabbix_agentd_LINK) $(zabbix_agentd_OBJECTS) $(zabbix_agentd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cpustat.Po
include ./$(DEPDIR)/diskdevices.Po
include ./$(DEPDIR)/interfaces.Po
include ./$(DEPDIR)/perfstat.Po
include ./$(DEPDIR)/stats.Po
include ./$(DEPDIR)/vmstats.Po
include ./$(DEPDIR)/zabbix_agent.Po
include ./$(DEPDIR)/zabbix_agentd-active.Po
include ./$(DEPDIR)/zabbix_agentd-cpustat.Po
include ./$(DEPDIR)/zabbix_agentd-diskdevices.Po
include ./$(DEPDIR)/zabbix_agentd-eventlog.Po
include ./$(DEPDIR)/zabbix_agentd-interfaces.Po
include ./$(DEPDIR)/zabbix_agentd-listener.Po
include ./$(DEPDIR)/zabbix_agentd-logfiles.Po
include ./$(DEPDIR)/zabbix_agentd-perfstat.Po
include ./$(DEPDIR)/zabbix_agentd-stats.Po
include ./$(DEPDIR)/zabbix_agentd-vmstats.Po
include ./$(DEPDIR)/zabbix_agentd-zabbix_agentd.Po
include ./$(DEPDIR)/zabbix_agentd-zbxconf.Po
include ./$(DEPDIR)/zbxconf.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

zabbix_agentd-active.o: active.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-active.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-active.Tpo -c -o zabbix_agentd-active.o `test -f 'active.c' || echo '$(srcdir)/'`active.c
	mv -f $(DEPDIR)/zabbix_agentd-active.Tpo $(DEPDIR)/zabbix_agentd-active.Po
#	source='active.c' object='zabbix_agentd-active.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-active.o `test -f 'active.c' || echo '$(srcdir)/'`active.c

zabbix_agentd-active.obj: active.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-active.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-active.Tpo -c -o zabbix_agentd-active.obj `if test -f 'active.c'; then $(CYGPATH_W) 'active.c'; else $(CYGPATH_W) '$(srcdir)/active.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-active.Tpo $(DEPDIR)/zabbix_agentd-active.Po
#	source='active.c' object='zabbix_agentd-active.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-active.obj `if test -f 'active.c'; then $(CYGPATH_W) 'active.c'; else $(CYGPATH_W) '$(srcdir)/active.c'; fi`

zabbix_agentd-stats.o: stats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-stats.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-stats.Tpo -c -o zabbix_agentd-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c
	mv -f $(DEPDIR)/zabbix_agentd-stats.Tpo $(DEPDIR)/zabbix_agentd-stats.Po
#	source='stats.c' object='zabbix_agentd-stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c

zabbix_agentd-stats.obj: stats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-stats.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-stats.Tpo -c -o zabbix_agentd-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-stats.Tpo $(DEPDIR)/zabbix_agentd-stats.Po
#	source='stats.c' object='zabbix_agentd-stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`

zabbix_agentd-cpustat.o: cpustat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-cpustat.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-cpustat.Tpo -c -o zabbix_agentd-cpustat.o `test -f 'cpustat.c' || echo '$(srcdir)/'`cpustat.c
	mv -f $(DEPDIR)/zabbix_agentd-cpustat.Tpo $(DEPDIR)/zabbix_agentd-cpustat.Po
#	source='cpustat.c' object='zabbix_agentd-cpustat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-cpustat.o `test -f 'cpustat.c' || echo '$(srcdir)/'`cpustat.c

zabbix_agentd-cpustat.obj: cpustat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-cpustat.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-cpustat.Tpo -c -o zabbix_agentd-cpustat.obj `if test -f 'cpustat.c'; then $(CYGPATH_W) 'cpustat.c'; else $(CYGPATH_W) '$(srcdir)/cpustat.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-cpustat.Tpo $(DEPDIR)/zabbix_agentd-cpustat.Po
#	source='cpustat.c' object='zabbix_agentd-cpustat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-cpustat.obj `if test -f 'cpustat.c'; then $(CYGPATH_W) 'cpustat.c'; else $(CYGPATH_W) '$(srcdir)/cpustat.c'; fi`

zabbix_agentd-diskdevices.o: diskdevices.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-diskdevices.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-diskdevices.Tpo -c -o zabbix_agentd-diskdevices.o `test -f 'diskdevices.c' || echo '$(srcdir)/'`diskdevices.c
	mv -f $(DEPDIR)/zabbix_agentd-diskdevices.Tpo $(DEPDIR)/zabbix_agentd-diskdevices.Po
#	source='diskdevices.c' object='zabbix_agentd-diskdevices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-diskdevices.o `test -f 'diskdevices.c' || echo '$(srcdir)/'`diskdevices.c

zabbix_agentd-diskdevices.obj: diskdevices.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-diskdevices.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-diskdevices.Tpo -c -o zabbix_agentd-diskdevices.obj `if test -f 'diskdevices.c'; then $(CYGPATH_W) 'diskdevices.c'; else $(CYGPATH_W) '$(srcdir)/diskdevices.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-diskdevices.Tpo $(DEPDIR)/zabbix_agentd-diskdevices.Po
#	source='diskdevices.c' object='zabbix_agentd-diskdevices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-diskdevices.obj `if test -f 'diskdevices.c'; then $(CYGPATH_W) 'diskdevices.c'; else $(CYGPATH_W) '$(srcdir)/diskdevices.c'; fi`

zabbix_agentd-interfaces.o: interfaces.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-interfaces.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-interfaces.Tpo -c -o zabbix_agentd-interfaces.o `test -f 'interfaces.c' || echo '$(srcdir)/'`interfaces.c
	mv -f $(DEPDIR)/zabbix_agentd-interfaces.Tpo $(DEPDIR)/zabbix_agentd-interfaces.Po
#	source='interfaces.c' object='zabbix_agentd-interfaces.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-interfaces.o `test -f 'interfaces.c' || echo '$(srcdir)/'`interfaces.c

zabbix_agentd-interfaces.obj: interfaces.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-interfaces.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-interfaces.Tpo -c -o zabbix_agentd-interfaces.obj `if test -f 'interfaces.c'; then $(CYGPATH_W) 'interfaces.c'; else $(CYGPATH_W) '$(srcdir)/interfaces.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-interfaces.Tpo $(DEPDIR)/zabbix_agentd-interfaces.Po
#	source='interfaces.c' object='zabbix_agentd-interfaces.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-interfaces.obj `if test -f 'interfaces.c'; then $(CYGPATH_W) 'interfaces.c'; else $(CYGPATH_W) '$(srcdir)/interfaces.c'; fi`

zabbix_agentd-perfstat.o: perfstat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-perfstat.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-perfstat.Tpo -c -o zabbix_agentd-perfstat.o `test -f 'perfstat.c' || echo '$(srcdir)/'`perfstat.c
	mv -f $(DEPDIR)/zabbix_agentd-perfstat.Tpo $(DEPDIR)/zabbix_agentd-perfstat.Po
#	source='perfstat.c' object='zabbix_agentd-perfstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-perfstat.o `test -f 'perfstat.c' || echo '$(srcdir)/'`perfstat.c

zabbix_agentd-perfstat.obj: perfstat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-perfstat.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-perfstat.Tpo -c -o zabbix_agentd-perfstat.obj `if test -f 'perfstat.c'; then $(CYGPATH_W) 'perfstat.c'; else $(CYGPATH_W) '$(srcdir)/perfstat.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-perfstat.Tpo $(DEPDIR)/zabbix_agentd-perfstat.Po
#	source='perfstat.c' object='zabbix_agentd-perfstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-perfstat.obj `if test -f 'perfstat.c'; then $(CYGPATH_W) 'perfstat.c'; else $(CYGPATH_W) '$(srcdir)/perfstat.c'; fi`

zabbix_agentd-vmstats.o: vmstats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-vmstats.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-vmstats.Tpo -c -o zabbix_agentd-vmstats.o `test -f 'vmstats.c' || echo '$(srcdir)/'`vmstats.c
	mv -f $(DEPDIR)/zabbix_agentd-vmstats.Tpo $(DEPDIR)/zabbix_agentd-vmstats.Po
#	source='vmstats.c' object='zabbix_agentd-vmstats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-vmstats.o `test -f 'vmstats.c' || echo '$(srcdir)/'`vmstats.c

zabbix_agentd-vmstats.obj: vmstats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-vmstats.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-vmstats.Tpo -c -o zabbix_agentd-vmstats.obj `if test -f 'vmstats.c'; then $(CYGPATH_W) 'vmstats.c'; else $(CYGPATH_W) '$(srcdir)/vmstats.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-vmstats.Tpo $(DEPDIR)/zabbix_agentd-vmstats.Po
#	source='vmstats.c' object='zabbix_agentd-vmstats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-vmstats.obj `if test -f 'vmstats.c'; then $(CYGPATH_W) 'vmstats.c'; else $(CYGPATH_W) '$(srcdir)/vmstats.c'; fi`

zabbix_agentd-logfiles.o: logfiles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-logfiles.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-logfiles.Tpo -c -o zabbix_agentd-logfiles.o `test -f 'logfiles.c' || echo '$(srcdir)/'`logfiles.c
	mv -f $(DEPDIR)/zabbix_agentd-logfiles.Tpo $(DEPDIR)/zabbix_agentd-logfiles.Po
#	source='logfiles.c' object='zabbix_agentd-logfiles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-logfiles.o `test -f 'logfiles.c' || echo '$(srcdir)/'`logfiles.c

zabbix_agentd-logfiles.obj: logfiles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-logfiles.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-logfiles.Tpo -c -o zabbix_agentd-logfiles.obj `if test -f 'logfiles.c'; then $(CYGPATH_W) 'logfiles.c'; else $(CYGPATH_W) '$(srcdir)/logfiles.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-logfiles.Tpo $(DEPDIR)/zabbix_agentd-logfiles.Po
#	source='logfiles.c' object='zabbix_agentd-logfiles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-logfiles.obj `if test -f 'logfiles.c'; then $(CYGPATH_W) 'logfiles.c'; else $(CYGPATH_W) '$(srcdir)/logfiles.c'; fi`

zabbix_agentd-zabbix_agentd.o: zabbix_agentd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zabbix_agentd.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo -c -o zabbix_agentd-zabbix_agentd.o `test -f 'zabbix_agentd.c' || echo '$(srcdir)/'`zabbix_agentd.c
	mv -f $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo $(DEPDIR)/zabbix_agentd-zabbix_agentd.Po
#	source='zabbix_agentd.c' object='zabbix_agentd-zabbix_agentd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zabbix_agentd.o `test -f 'zabbix_agentd.c' || echo '$(srcdir)/'`zabbix_agentd.c

zabbix_agentd-zabbix_agentd.obj: zabbix_agentd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zabbix_agentd.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo -c -o zabbix_agentd-zabbix_agentd.obj `if test -f 'zabbix_agentd.c'; then $(CYGPATH_W) 'zabbix_agentd.c'; else $(CYGPATH_W) '$(srcdir)/zabbix_agentd.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo $(DEPDIR)/zabbix_agentd-zabbix_agentd.Po
#	source='zabbix_agentd.c' object='zabbix_agentd-zabbix_agentd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zabbix_agentd.obj `if test -f 'zabbix_agentd.c'; then $(CYGPATH_W) 'zabbix_agentd.c'; else $(CYGPATH_W) '$(srcdir)/zabbix_agentd.c'; fi`

zabbix_agentd-zbxconf.o: zbxconf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zbxconf.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-zbxconf.Tpo -c -o zabbix_agentd-zbxconf.o `test -f 'zbxconf.c' || echo '$(srcdir)/'`zbxconf.c
	mv -f $(DEPDIR)/zabbix_agentd-zbxconf.Tpo $(DEPDIR)/zabbix_agentd-zbxconf.Po
#	source='zbxconf.c' object='zabbix_agentd-zbxconf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zbxconf.o `test -f 'zbxconf.c' || echo '$(srcdir)/'`zbxconf.c

zabbix_agentd-zbxconf.obj: zbxconf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zbxconf.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-zbxconf.Tpo -c -o zabbix_agentd-zbxconf.obj `if test -f 'zbxconf.c'; then $(CYGPATH_W) 'zbxconf.c'; else $(CYGPATH_W) '$(srcdir)/zbxconf.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-zbxconf.Tpo $(DEPDIR)/zabbix_agentd-zbxconf.Po
#	source='zbxconf.c' object='zabbix_agentd-zbxconf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zbxconf.obj `if test -f 'zbxconf.c'; then $(CYGPATH_W) 'zbxconf.c'; else $(CYGPATH_W) '$(srcdir)/zbxconf.c'; fi`

zabbix_agentd-listener.o: listener.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-listener.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-listener.Tpo -c -o zabbix_agentd-listener.o `test -f 'listener.c' || echo '$(srcdir)/'`listener.c
	mv -f $(DEPDIR)/zabbix_agentd-listener.Tpo $(DEPDIR)/zabbix_agentd-listener.Po
#	source='listener.c' object='zabbix_agentd-listener.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-listener.o `test -f 'listener.c' || echo '$(srcdir)/'`listener.c

zabbix_agentd-listener.obj: listener.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-listener.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-listener.Tpo -c -o zabbix_agentd-listener.obj `if test -f 'listener.c'; then $(CYGPATH_W) 'listener.c'; else $(CYGPATH_W) '$(srcdir)/listener.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-listener.Tpo $(DEPDIR)/zabbix_agentd-listener.Po
#	source='listener.c' object='zabbix_agentd-listener.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-listener.obj `if test -f 'listener.c'; then $(CYGPATH_W) 'listener.c'; else $(CYGPATH_W) '$(srcdir)/listener.c'; fi`

zabbix_agentd-eventlog.o: eventlog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-eventlog.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-eventlog.Tpo -c -o zabbix_agentd-eventlog.o `test -f 'eventlog.c' || echo '$(srcdir)/'`eventlog.c
	mv -f $(DEPDIR)/zabbix_agentd-eventlog.Tpo $(DEPDIR)/zabbix_agentd-eventlog.Po
#	source='eventlog.c' object='zabbix_agentd-eventlog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-eventlog.o `test -f 'eventlog.c' || echo '$(srcdir)/'`eventlog.c

zabbix_agentd-eventlog.obj: eventlog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-eventlog.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-eventlog.Tpo -c -o zabbix_agentd-eventlog.obj `if test -f 'eventlog.c'; then $(CYGPATH_W) 'eventlog.c'; else $(CYGPATH_W) '$(srcdir)/eventlog.c'; fi`
	mv -f $(DEPDIR)/zabbix_agentd-eventlog.Tpo $(DEPDIR)/zabbix_agentd-eventlog.Po
#	source='eventlog.c' object='zabbix_agentd-eventlog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-eventlog.obj `if test -f 'eventlog.c'; then $(CYGPATH_W) 'eventlog.c'; else $(CYGPATH_W) '$(srcdir)/eventlog.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
